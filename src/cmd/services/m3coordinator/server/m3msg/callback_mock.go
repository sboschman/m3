// Code generated by MockGen. DO NOT EDIT.
// Source: src/cmd/services/m3coordinator/server/m3msg/types.go

// Package m3msg is a generated GoMock package.
package m3msg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCallbackable is a mock of Callbackable interface
type MockCallbackable struct {
	ctrl     *gomock.Controller
	recorder *MockCallbackableMockRecorder
}

// MockCallbackableMockRecorder is the mock recorder for MockCallbackable
type MockCallbackableMockRecorder struct {
	mock *MockCallbackable
}

// NewMockCallbackable creates a new mock instance
func NewMockCallbackable(ctrl *gomock.Controller) *MockCallbackable {
	mock := &MockCallbackable{ctrl: ctrl}
	mock.recorder = &MockCallbackableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCallbackable) EXPECT() *MockCallbackableMockRecorder {
	return m.recorder
}

// Callback mocks base method
func (m *MockCallbackable) Callback(t CallbackType) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Callback", t)
}

// Callback indicates an expected call of Callback
func (mr *MockCallbackableMockRecorder) Callback(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Callback", reflect.TypeOf((*MockCallbackable)(nil).Callback), t)
}
